package channels_config

import (
	//"os"

	//alertingOpsgenie "github.com/grafana/alerting/receivers/opsgenie"
	alertingTemplates "github.com/grafana/alerting/templates"
)

// GetAvailableNotifiers returns the metadata of all the notification channels that can be configured.
func GetAvailableNotifiers() []*NotifierPlugin {
	//hostname, _ := os.Hostname()

	// pushoverSoundOptions := []SelectOption{
	// 	{
	// 		Value: "default",
	// 		Label: "系统默认",
	// 	},
	// 	{
	// 		Value: "pushover",
	// 		Label: "Pushover",
	// 	}, {
	// 		Value: "bike",
	// 		Label: "Bike",
	// 	}, {
	// 		Value: "bugle",
	// 		Label: "Bugle",
	// 	}, {
	// 		Value: "cashregister",
	// 		Label: "Cashregister",
	// 	}, {
	// 		Value: "classical",
	// 		Label: "Classical",
	// 	}, {
	// 		Value: "cosmic",
	// 		Label: "Cosmic",
	// 	}, {
	// 		Value: "falling",
	// 		Label: "Falling",
	// 	}, {
	// 		Value: "gamelan",
	// 		Label: "Gamelan",
	// 	}, {
	// 		Value: "incoming",
	// 		Label: "Incoming",
	// 	}, {
	// 		Value: "intermission",
	// 		Label: "Intermission",
	// 	}, {
	// 		Value: "magic",
	// 		Label: "Magic",
	// 	}, {
	// 		Value: "mechanical",
	// 		Label: "Mechanical",
	// 	}, {
	// 		Value: "pianobar",
	// 		Label: "Pianobar",
	// 	}, {
	// 		Value: "siren",
	// 		Label: "Siren",
	// 	}, {
	// 		Value: "spacealarm",
	// 		Label: "Spacealarm",
	// 	}, {
	// 		Value: "tugboat",
	// 		Label: "Tugboat",
	// 	}, {
	// 		Value: "alien",
	// 		Label: "Alien",
	// 	}, {
	// 		Value: "climb",
	// 		Label: "Climb",
	// 	}, {
	// 		Value: "persistent",
	// 		Label: "Persistent",
	// 	}, {
	// 		Value: "echo",
	// 		Label: "Echo",
	// 	}, {
	// 		Value: "updown",
	// 		Label: "Updown",
	// 	}, {
	// 		Value: "none",
	// 		Label: "无",
	// 	},
	// }

	// pushoverPriorityOptions := []SelectOption{
	// 	{
	// 		Value: "2",
	// 		Label: "紧急",
	// 	},
	// 	{
	// 		Value: "1",
	// 		Label: "高危",
	// 	},
	// 	{
	// 		Value: "0",
	// 		Label: "正常",
	// 	},
	// 	{
	// 		Value: "-1",
	// 		Label: "低风险",
	// 	},
	// 	{
	// 		Value: "-2",
	// 		Label: "最小风险",
	// 	},
	// }

	return []*NotifierPlugin{
		{
			Type:        "dingding",
			Name:        "叮叮通讯",
			Description: "向叮叮发送 HTTP POST 请求",
			Heading:     "叮叮设置",
			Options: []NotifierOption{
				{
					Label:        "URL地址",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxxx",
					PropertyName: "url",
					Required:     true,
				},
				{
					Label:        "消息类型",
					Element:      ElementTypeSelect,
					PropertyName: "msgType",
					SelectOptions: []SelectOption{
						{
							Value: "link",
							Label: "链接"},
						{
							Value: "actionCard",
							Label: "操作卡",
						},
					},
				},
				{ // New in 9.3.
					Label:        "标题",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "消息的模板化标题",
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
					PropertyName: "title",
				},
				{ // New in 8.0.
					Label:        "消息",
					Element:      ElementTypeTextArea,
					Description:  "自定义叮叮当当消息。您可以使用模板变量。",
					Placeholder:  alertingTemplates.DefaultMessageEmbed,
					PropertyName: "message",
				},
			},
		},
		{
			Type:        "kafka",
			Name:        "Kafka REST代理",
			Description: "向Kafka Rest代理发送通知",
			Heading:     "Kafka settings",
			Options: []NotifierOption{
				{
					Label:        "Kafka REST代理",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "提示：如果您直接使用托管在 Confluent Kafka 服务器上的 v3 API，则必须在此处将 /kafka 附加到 URL 中。示例：https://localhost:8082/kafka",
					Placeholder:  "http://localhost:8082",
					PropertyName: "kafkaRestProxy",
					Required:     true,
				},
				{
					Label:        "主题(Topic)",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "topic1",
					PropertyName: "kafkaTopic",
					Required:     true,
				},
				{
					Label:        "用户账号",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					PropertyName: "username",
					Required:     false,
				},
				{
					Label:        "用户密码",
					Element:      ElementTypeInput,
					InputType:    InputTypePassword,
					Description:  "调用 Kafka REST 代理时使用的密码",
					PropertyName: "password",
					Required:     false,
					Secure:       true,
				},
				{
					Label:        "API版本",
					Element:      ElementTypeSelect,
					InputType:    InputTypeText,
					Description:  "联系Kafka REST服务器时要使用的API版本。默认情况下将使用 v2。",
					PropertyName: "apiVersion",
					Required:     false,
					SelectOptions: []SelectOption{
						{
							Value: "v2",
							Label: "v2版",
						},
						{
							Value: "v3",
							Label: "v3版",
						},
					},
				},
				{
					Label:        "集群ID",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "v3版 API 需要指定群集 ID。",
					Placeholder:  "lkc-abcde",
					PropertyName: "kafkaClusterId",
					Required:     true,
					ShowWhen: ShowWhen{
						Field: "apiVersion",
						Is:    "v3",
					},
				},
				{
					Label:        "描述",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Kafka消息的模板化描述",
					PropertyName: "description",
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
				},
				{
					Label:        "详细",
					Element:      ElementTypeTextArea,
					Description:  "要包含在消息中的自定义详细信息。您可以使用模板变量。",
					PropertyName: "details",
					Placeholder:  alertingTemplates.DefaultMessageEmbed,
				},
			},
		},
		{
			Type:        "email",
			Name:        "电子邮件",
			Description: "使用系统服务器配置的 SMTP 设置发送通知",
			Heading:     "Email settings",
			Options: []NotifierOption{
				{
					Label:        "单个电子邮件",
					Description:  "向所有收件人发送一封电子邮件",
					Element:      ElementTypeCheckbox,
					PropertyName: "singleEmail",
				},
				{
					Label:        "地址(可多个)",
					Description:  "您可以使用 “;” 输入多个电子邮件地址分隔符",
					Element:      ElementTypeTextArea,
					PropertyName: "addresses",
					Required:     true,
				},
				{ // New in 8.0.
					Label:        "消息",
					Description:  "可选消息。您可以使用模板自定义此字段。使用自定义消息将替换默认消息",
					Element:      ElementTypeTextArea,
					PropertyName: "message",
				},
				{ // New in 9.0.
					Label:        "主题",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "可选主题。您可以使用模板自定义此字段",
					PropertyName: "subject",
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
				},
			},
		},
		/**
		{
			Type:        "pagerduty",
			Name:        "PagerDuty",
			Description: "将通知发送到PagerDuty",
			Heading:     "PagerDuty设置",
			Options: []NotifierOption{
				{
					Label:        "集成密钥",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "Pagerduty集成密钥",
					PropertyName: "integrationKey",
					Required:     true,
					Secure:       true,
				},
				{
					Label:        "事件的严重性",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "critical",
					Description:  "事件的严重性。它必须是关键，错误，警告，信息 - 否则，设置默认值为关键。您可以使用模板",
					PropertyName: "severity",
				},
				{ // New in 8.0.
					Label:        "类别",
					Description:  "事件的类/类型，例如“ping 失败”或“CPU 负载”",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					PropertyName: "class",
				},
				{ // New in 8.0.
					Label:        "组件",
					Description:  "负责事件的源计算机组件，例如 mysql 或 eth0",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "系统",
					PropertyName: "component",
				},
				{ // New in 8.0.
					Label:        "群组",
					Description:  "服务组件的逻辑分组，例如“应用程序堆栈”",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					PropertyName: "group",
				},
				{ // New in 8.0.
					Label:        "摘要",
					Description:  "您可以使用模板进行摘要",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
					PropertyName: "summary",
				},
				{ // New in 9.4.
					Label:        "来源",
					Description:  "受影响系统的唯一位置，最好是主机名或 FQDN。您可以使用模板",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  hostname,
					PropertyName: "source",
				},
				{ // New in 9.4.
					Label:        "客户端",
					Description:  "触发此事件的监视客户端的名称。您可以使用模板",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "系统",
					PropertyName: "client",
				},
				{ // New in 9.4.
					Label:        "客户端URL",
					Description:  "触发此事件的监视客户端的 URL。您可以使用模板",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "{{ .ExternalURL }}",
					PropertyName: "client_url",
				},
				{ // New in 9.5.
					Label:        "详细",
					Description:  "一组任意键/值对，提供有关事件的更多详细信息。",
					Element:      ElementTypeKeyValueMap,
					InputType:    InputTypeText,
					PropertyName: "details",
				},
			},
		},
		{
			Type:        "victorops",
			Name:        "VictorOps",
			Description: "向VictorOps发送通知",
			Heading:     "VictorOps settings",
			Options: []NotifierOption{
				{
					Label:        "URL",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "VictorOps地址",
					PropertyName: "url",
					Required:     true,
				},
				{ // New in 8.0.
					Label:        "消息类型",
					Element:      ElementTypeSelect,
					PropertyName: "messageType",
					SelectOptions: []SelectOption{
						{
							Value: "CRITICAL",
							Label: "严重",
						},
						{
							Value: "WARNING",
							Label: "警告",
						},
					},
				},
				{ // New in 9.3.
					Label:        "标题",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "要显示的模板化标题",
					PropertyName: "title",
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
				},
				{ // New in 9.3.
					Label:        "描述",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "消息的模板化描述",
					PropertyName: "description",
					Placeholder:  alertingTemplates.DefaultMessageEmbed,
				},
			},
		},
		{
			Type:        "pushover",
			Name:        "Pushover",
			Description: "将 HTTP POST 请求发送到 Pushover API",
			Heading:     "Pushover settings",
			Options: []NotifierOption{
				{
					Label:        "接口令牌",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "Application token",
					PropertyName: "apiToken",
					Required:     true,
					Secure:       true,
				},
				{
					Label:        "用户密钥",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "comma-separated list",
					PropertyName: "userKey",
					Required:     true,
					Secure:       true,
				},
				{
					Label:        "设备（可选）",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "逗号分隔的列表;留空以发送到所有设备",
					PropertyName: "device",
				},
				{
					Label:         "警报优先级",
					Element:       ElementTypeSelect,
					SelectOptions: pushoverPriorityOptions,
					PropertyName:  "priority",
				},
				{
					Label:         "良好优先级",
					Element:       ElementTypeSelect,
					SelectOptions: pushoverPriorityOptions,
					PropertyName:  "okPriority",
				},
				{
					Description:  "Pushover 服务器向用户发送相同警报或确定通知的频率（以秒为单位）。",
					Label:        "重试（仅用于紧急优先级）",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "最少 30 秒",
					PropertyName: "retry",
				},
				{
					Description:  "警报或确定通知将继续重试的秒数。",
					Label:        "过期（仅用于紧急优先级）",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "最大 86400 秒",
					PropertyName: "expire",
				},
				{
					Label:         "警报声音",
					Element:       ElementTypeSelect,
					SelectOptions: pushoverSoundOptions,
					PropertyName:  "sound",
				},
				{
					Label:         "状态良好声音",
					Element:       ElementTypeSelect,
					SelectOptions: pushoverSoundOptions,
					PropertyName:  "okSound",
				},
				{ // New in 9.3.
					Label:        "标题",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
					PropertyName: "title",
				},
				{ // New in 8.0.
					Label:        "消息",
					Element:      ElementTypeTextArea,
					Placeholder:  alertingTemplates.DefaultMessageEmbed,
					PropertyName: "message",
				},
			},
		},
		{
			Type:        "slack",
			Name:        "Slack",
			Description: "向 Slack 发送通知",
			Heading:     "Slack设置",
			Options: []NotifierOption{
				{
					Label:        "Recipient",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Specify channel, private group, or IM channel (can be an encoded ID or a name) - required unless you provide a webhook",
					PropertyName: "recipient",
					Required:     true,
					DependsOn:    "url",
				},
				// Logically, this field should be required when not using a webhook, since the Slack API needs a token.
				// However, since the UI doesn't allow to say that a field is required or not depending on another field,
				// we've gone with the compromise of making this field optional and instead return a validation error
				// if it's necessary and missing.
				{
					Label:        "Token",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Provide a Slack API token (starts with \"xoxb\") - required unless you provide a webhook",
					PropertyName: "token",
					Secure:       true,
					Required:     true,
					DependsOn:    "url",
				},
				{
					Label:        "Username",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Set the username for the bot's message",
					PropertyName: "username",
				},
				{
					Label:        "Icon emoji",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Provide an emoji to use as the icon for the bot's message. Overrides the icon URL.",
					PropertyName: "icon_emoji",
				},
				{
					Label:        "Icon URL",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Provide a URL to an image to use as the icon for the bot's message",
					PropertyName: "icon_url",
				},
				{
					Label:        "Mention Users",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Mention one or more users (comma separated) when notifying in a channel, by ID (you can copy this from the user's Slack profile)",
					PropertyName: "mentionUsers",
				},
				{
					Label:        "Mention Groups",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Mention one or more groups (comma separated) when notifying in a channel (you can copy this from the group's Slack profile URL)",
					PropertyName: "mentionGroups",
				},
				{
					Label:   "Mention Channel",
					Element: ElementTypeSelect,
					SelectOptions: []SelectOption{
						{
							Value: "",
							Label: "Disabled",
						},
						{
							Value: "here",
							Label: "Every active channel member",
						},
						{
							Value: "channel",
							Label: "Every channel member",
						},
					},
					Description:  "Mention whole channel or just active members when notifying",
					PropertyName: "mentionChannel",
				},
				{
					Label:        "Webhook URL",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Optionally provide a Slack incoming webhook URL for sending messages, in this case the token isn't necessary",
					Placeholder:  "Slack incoming webhook URL",
					PropertyName: "url",
					Secure:       true,
					Required:     true,
					DependsOn:    "token",
				},
				{ // New in 8.4.
					Label:        "Endpoint URL",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Optionally provide a custom Slack message API endpoint for non-webhook requests, default is https://slack.com/api/chat.postMessage",
					Placeholder:  "Slack endpoint url",
					PropertyName: "endpointUrl",
				},
				{ // New in 8.0.
					Label:        "Title",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Templated title of the slack message",
					PropertyName: "title",
					Placeholder:  `{{ template "slack.default.title" . }}`,
				},
				{ // New in 8.0.
					Label:        "Text Body",
					Element:      ElementTypeTextArea,
					Description:  "Body of the slack message",
					PropertyName: "text",
					Placeholder:  `{{ template "slack.default.text" . }}`,
				},
			},
		},
		{
			Type:        "sensugo",
			Name:        "Sensu Go",
			Description: "Sends HTTP POST request to a Sensu Go API",
			Heading:     "Sensu Go Settings",
			Options: []NotifierOption{
				{
					Label:        "Backend URL",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "http://sensu-api.local:8080",
					PropertyName: "url",
					Required:     true,
				},
				{
					Label:        "API Key",
					Element:      ElementTypeInput,
					InputType:    InputTypePassword,
					Description:  "API key to auth to Sensu Go backend",
					PropertyName: "apikey",
					Required:     true,
					Secure:       true,
				},
				{
					Label:        "Proxy entity name",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "default",
					PropertyName: "entity",
				},
				{
					Label:        "Check name",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "default",
					PropertyName: "check",
				},
				{
					Label:        "Handler",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					PropertyName: "handler",
				},
				{
					Label:        "Namespace",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "default",
					PropertyName: "namespace",
				},
				{ // New in 8.0.
					Label:        "Message",
					Element:      ElementTypeTextArea,
					Placeholder:  alertingTemplates.DefaultMessageEmbed,
					PropertyName: "message",
				},
			},
		},
		{
			Type:        "teams",
			Name:        "Microsoft Teams",
			Description: "Sends notifications using Incoming Webhook connector to Microsoft Teams",
			Heading:     "Teams settings",
			Options: []NotifierOption{
				{
					Label:        "URL",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "Teams incoming webhook url",
					PropertyName: "url",
					Required:     true,
				},
				{
					Label:        "Title",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Templated title of the Teams message.",
					PropertyName: "title",
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
				},
				{
					Label:        "Section Title",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Section title for the Teams message. Leave blank for none.",
					PropertyName: "sectiontitle",
				},
				{ // New in 8.0.
					Label:        "Message",
					Element:      ElementTypeTextArea,
					Placeholder:  alertingTemplates.DefaultMessageEmbed,
					PropertyName: "message",
				},
			},
		},
		{
			Type:        "telegram",
			Name:        "Telegram",
			Description: "Sends notifications to Telegram",
			Heading:     "Telegram API settings",
			Options: []NotifierOption{
				{
					Label:        "BOT API Token",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "Telegram BOT API Token",
					PropertyName: "bottoken",
					Required:     true,
					Secure:       true,
				},
				{
					Label:        "Chat ID",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Integer Telegram Chat Identifier",
					PropertyName: "chatid",
					Required:     true,
				},
				{ // New in 8.0.
					Label:        "Message",
					Element:      ElementTypeTextArea,
					Placeholder:  alertingTemplates.DefaultMessageEmbed,
					PropertyName: "message",
				},
				{
					Label:   "Parse Mode",
					Element: ElementTypeSelect,
					SelectOptions: []SelectOption{
						{
							Value: "None",
							Label: "None",
						},
						{
							Value: "HTML",
							Label: "HTML",
						},
						{
							Value: "Markdown",
							Label: "Markdown",
						},
						{
							Value: "MarkdownV2",
							Label: "Markdown V2",
						},
					},
					Description:  `Mode for parsing entities in the message text. Default is 'HTML'`,
					PropertyName: "parse_mode",
				},
				{
					Label:        "Disable Notification",
					Description:  "Sends the message silently. Users will receive a notification with no sound.",
					Element:      ElementTypeCheckbox,
					PropertyName: "disable_notification",
				},
			},
		},
		*/
		{
			Type:        "webhook",
			Name:        "Web钩子（Webhook）",
			Description: "将 HTTP POST 请求发送到 URL",
			Heading:     "Web钩子设置",
			Options: []NotifierOption{
				{
					Label:        "URL地址",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					PropertyName: "url",
					Required:     true,
				},
				{
					Label:   "HTTP方法",
					Element: ElementTypeSelect,
					SelectOptions: []SelectOption{
						{
							Value: "POST",
							Label: "POST",
						},
						{
							Value: "PUT",
							Label: "PUT",
						},
					},
					PropertyName: "httpMethod",
				},
				{
					Label:        "HTTP Basic身份认证 - 用户账号",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					PropertyName: "username",
				},
				{
					Label:        "HTTP Basic身份认证 - 用户密码",
					Element:      ElementTypeInput,
					InputType:    InputTypePassword,
					PropertyName: "password",
					Secure:       true,
				},
				{ // New in 9.1
					Label:        "Authorization授权标头 - 模式",
					Description:  "（可选）为授权请求标头提供方案。默认值为持有者。",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					PropertyName: "authorization_scheme",
					Placeholder:  "Bearer",
				},
				{ // New in 9.1
					Label:        "Authorization授权标头 - 凭据",
					Description:  "授权请求标头的凭据。只能设置 HTTP 基本身份验证或授权请求标头之一。",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					PropertyName: "authorization_credentials",
					Secure:       true,
				},
				{ // New in 8.0. TODO: How to enforce only numbers?
					Label:        "最大警报数",
					Description:  "要包含在通知中的最大警报数。超过此数字的其余警报将被忽略。0 表示无限制。",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					PropertyName: "maxAlerts",
				},
				{ // New in 9.3.
					Label:        "标题",
					Description:  "消息的模板化标题。",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					PropertyName: "title",
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
				},
				{ // New in 9.3.
					Label:        "消息",
					Description:  "自定义消息。您可以使用模板变量。",
					Element:      ElementTypeTextArea,
					PropertyName: "message",
					Placeholder:  alertingTemplates.DefaultMessageEmbed,
				},
			},
		},
		{
			Type:        "wecom",
			Name:        "微信通讯",
			Description: "将系统生成的警报发送到微信",
			Heading:     "微信设置",
			Options: []NotifierOption{
				{
					Label:        "钩子（Webhook） URL地址",
					Description:  "如果使用组机器人，则为必需",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxxxxxxx",
					PropertyName: "url",
					Secure:       true,
					Required:     true,
					DependsOn:    "secret",
				},
				{
					Label:        "代理ID",
					Description:  "如果使用 APIAPP，则需要，请参阅创建 ApiApp https://work.weixin.qq.com/wework_admin/frame#apps",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "1000002",
					PropertyName: "agent_id",
					Required:     true,
					DependsOn:    "url",
				},
				{
					Label:        "机构ID",
					Description:  "如果使用 APIAPP，则为必需，请参阅 https://work.weixin.qq.com/wework_admin/frame#profile",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "wwxxxxxxxxx",
					PropertyName: "corp_id",
					Required:     true,
					DependsOn:    "url",
				},
				{
					Label:        "密钥",
					Description:  "如果使用 APIAPP 时必需",
					Element:      ElementTypeInput,
					InputType:    InputTypePassword,
					Placeholder:  "secret",
					PropertyName: "secret",
					Secure:       true,
					Required:     true,
					DependsOn:    "url",
				},
				{
					Label:        "消息类型",
					Element:      ElementTypeSelect,
					PropertyName: "msgtype",
					SelectOptions: []SelectOption{
						{
							Value: "text",
							Label: "文本格式",
						},
						{
							Value: "markdown",
							Label: "Markdown格式",
						},
					},
					Placeholder: "文本",
				},
				{
					Label:        "消息",
					Description:  "自定义微信消息。您可以使用模板变量。",
					Element:      ElementTypeTextArea,
					Placeholder:  alertingTemplates.DefaultMessageEmbed,
					PropertyName: "message",
				},
				{ // New in 9.1.
					Label:        "标题",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "消息的模板化标题",
					PropertyName: "title",
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
				},
				{
					Label:        "接收用户",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "@all",
					PropertyName: "touser",
				},
			},
		},
		{
			Type:        "prometheus-alertmanager",
			Name:        "警报管理器",
			Description: "向警报管理器发送通知",
			Heading:     "警报管理器设置",
			Options: []NotifierOption{
				{
					Label:        "URL地址",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "http://localhost:9093",
					PropertyName: "url",
					Required:     true,
				},
				{
					Label:        "Basic认证用户",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					PropertyName: "basicAuthUser",
				},
				{
					Label:        "Basic认证密码",
					Element:      ElementTypeInput,
					InputType:    InputTypePassword,
					PropertyName: "basicAuthPassword",
					Secure:       true,
				},
			},
		},
		/**
		{
			Type:        "discord",
			Name:        "Discord",
			Heading:     "Discord settings",
			Description: "Sends notifications to Discord",
			Options: []NotifierOption{
				{
					Label:        "Title",
					Description:  "Templated title of the message",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
					PropertyName: "title",
				},
				{
					Label:        "Message Content",
					Description:  "Mention a group using @ or a user using <@ID> when notifying in a channel",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  alertingTemplates.DefaultMessageEmbed,
					PropertyName: "message",
				},
				{
					Label:        "Webhook URL",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "Discord webhook URL",
					PropertyName: "url",
					Required:     true,
					Secure:       true,
				},
				{
					Label:        "Avatar URL",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					PropertyName: "avatar_url",
				},
				{
					Label:        "Use Discord's Webhook Username",
					Description:  "Use the username configured in Discord's webhook settings. Otherwise, the username will be 'Grafana'",
					Element:      ElementTypeCheckbox,
					PropertyName: "use_discord_username",
				},
			},
		},
		{
			Type:        "googlechat",
			Name:        "Google Hangouts Chat",
			Description: "Sends notifications to Google Hangouts Chat via webhooks based on the official JSON message format",
			Heading:     "Google Hangouts Chat settings",
			Options: []NotifierOption{
				{
					Label:        "URL",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "Google Hangouts Chat incoming webhook url",
					PropertyName: "url",
					Required:     true,
				},
				{
					Label:        "Title",
					Description:  "Templated title of the message",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
					PropertyName: "title",
				},
				{
					Label:        "Message",
					Element:      ElementTypeTextArea,
					Placeholder:  alertingTemplates.DefaultMessageEmbed,
					PropertyName: "message",
				},
			},
		},
		{
			Type:        "LINE",
			Name:        "LINE",
			Description: "Send notifications to LINE notify",
			Heading:     "LINE notify settings",
			Options: []NotifierOption{
				{
					Label:        "Token",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "LINE notify token key",
					PropertyName: "token",
					Required:     true,
					Secure:       true,
				},
				{ // New in 9.3
					Label:        "Title",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Templated title of the message",
					PropertyName: "title",
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
				},
				{ // New in 9.3
					Label:        "Description",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Templated description of the message",
					PropertyName: "description",
					Placeholder:  alertingTemplates.DefaultMessageEmbed,
				},
			},
		},
		{
			Type:        "threema",
			Name:        "Threema Gateway",
			Description: "Sends notifications to Threema using Threema Gateway (Basic IDs)",
			Heading:     "Threema Gateway settings",
			Info: "Notifications can be configured for any Threema Gateway ID of type \"Basic\". End-to-End IDs are not currently supported." +
				"The Threema Gateway ID can be set up at https://gateway.threema.ch/.",
			Options: []NotifierOption{
				{
					Label:          "Gateway ID",
					Element:        ElementTypeInput,
					InputType:      InputTypeText,
					Placeholder:    "*3MAGWID",
					Description:    "Your 8 character Threema Gateway Basic ID (starting with a *).",
					PropertyName:   "gateway_id",
					Required:       true,
					ValidationRule: "\\*[0-9A-Z]{7}",
				},
				{
					Label:          "Recipient ID",
					Element:        ElementTypeInput,
					InputType:      InputTypeText,
					Placeholder:    "YOUR3MID",
					Description:    "The 8 character Threema ID that should receive the alerts.",
					PropertyName:   "recipient_id",
					Required:       true,
					ValidationRule: "[0-9A-Z]{8}",
				},
				{
					Label:        "API Secret",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Your Threema Gateway API secret.",
					PropertyName: "api_secret",
					Required:     true,
					Secure:       true,
				},
				{ // New in 9.3
					Label:        "Title",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Templated title of the message.",
					PropertyName: "title",
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
				},
				{ // New in 9.3
					Label:        "Description",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Description:  "Templated description of the message.",
					PropertyName: "description",
					Placeholder:  alertingTemplates.DefaultMessageEmbed,
				},
			},
		},
		{
			Type:        "opsgenie",
			Name:        "OpsGenie",
			Description: "Sends notifications to OpsGenie",
			Heading:     "OpsGenie settings",
			Options: []NotifierOption{
				{
					Label:        "API Key",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "OpsGenie API Key",
					PropertyName: "apiKey",
					Required:     true,
					Secure:       true,
				},
				{
					Label:        "Alert API URL",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "https://api.opsgenie.com/v2/alerts",
					PropertyName: "apiUrl",
					Required:     true,
				},
				{
					Label:        "Message",
					Description:  "Alert text limited to 130 characters.",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  alertingTemplates.DefaultMessageTitleEmbed,
					PropertyName: "message",
				},
				{
					Label:        "Description",
					Description:  "A description of the incident.",
					Element:      ElementTypeTextArea,
					PropertyName: "description",
				},
				{
					Label:        "Auto close incidents",
					Element:      ElementTypeCheckbox,
					Description:  "Automatically close alerts in OpsGenie once the alert goes back to ok.",
					PropertyName: "autoClose",
				}, {
					Label:        "Override priority",
					Element:      ElementTypeCheckbox,
					Description:  "Allow the alert priority to be set using the og_priority annotation",
					PropertyName: "overridePriority",
				},
				{
					Label:   "Send notification tags as",
					Element: ElementTypeSelect,
					SelectOptions: []SelectOption{
						{
							Value: alertingOpsgenie.SendTags,
							Label: "Tags",
						},
						{
							Value: alertingOpsgenie.SendDetails,
							Label: "Extra Properties",
						},
						{
							Value: alertingOpsgenie.SendBoth,
							Label: "Tags & Extra Properties",
						},
					},
					Description:  "Send the common annotations to Opsgenie as either Extra Properties, Tags or both",
					PropertyName: "sendTagsAs",
				},
			},
		},
		{
			Type:        "webex",
			Name:        "Cisco Webex Teams",
			Description: "Sends notifications to Cisco Webex Teams",
			Heading:     "Webex settings",
			Info:        "Notifications can be configured for any Cisco Webex Teams",
			Options: []NotifierOption{
				{
					Label:        "Cisco Webex API URL",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "https://api.ciscospark.com/v1/messages",
					Description:  "API endpoint at which we'll send webhooks to.",
					PropertyName: "api_url",
				},
				{
					Label:        "Room ID",
					Description:  "The room ID to send messages to.",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  "GMtOWY0ZGJkNzMyMGFl",
					PropertyName: "room_id",
					Required:     true,
				},
				{
					Label:        "Bot Token",
					Description:  "Non-expiring access token of the bot that will post messages on our behalf.",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  `GMtOWY0ZGJkNzMyMGFl-12535454-123213`,
					PropertyName: "bot_token",
					Secure:       true,
					Required:     true,
				},
				{
					Label:        "Notification Template",
					Description:  "Notification template to use. Markdown is supported.",
					Element:      ElementTypeInput,
					InputType:    InputTypeText,
					Placeholder:  `{{ template "default.message" . }}`,
					PropertyName: "message",
				},
			},
		},
		*/
	}
}
